@model AccountsAppWeb.Core.Models.AccountLedgerModel
@using AccountsAppWeb.Infrastructure
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default panel-primary2">
            <div class="panel-heading">Account Ledger </div>
            <div class="panel-body">
                <div class="table-container1">
                    <div class="row table-top">
                        @using (Ajax.BeginForm("CreateOrUpdateAccountLedger", new AjaxOptions() { LoadingElementId = "divLoading", HttpMethod = "POST", OnBegin = "validateLedgerfrom", OnSuccess = "accountLedgerOnSuccess", OnFailure = "accountLedgeronFailure" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.LedgerId)
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label class="control-label">Org. Name</label>
                                    <label class="form-control">@UserManager.User.InstituteId</label>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Name</label>
                                    @Html.EditorFor(model => model.LedgerName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LedgerName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Group</label>
                                    @Html.DropDownListFor(model => model.AccountGroupId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AccountGroupId, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group second-field">
                                    <label>Opening Balance</label>
                                    @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.DropDownListFor(model => model.CrOrDr, new List<SelectListItem>() { new SelectListItem() { Text = "Cr", Value = "Cr" }, new SelectListItem() { Text = "Dr", Value = "Dr" } }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group clear-both">
                                    <label>Mobile</label>
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>TIN</label>
                                    @Html.EditorFor(model => model.TIN, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TIN, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>CST</label>
                                    @Html.EditorFor(model => model.CST, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CST, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>PAN</label>
                                    @Html.EditorFor(model => model.PAN, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PAN, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    <label>Address</label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Narration</label>
                                    @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Narration, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <button id="btnSaveLedger" type="submit" class="btn btn-primary btn-space">Save</button>
                                <button type="reset" class="btn btn-default">Close</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div id="deleteModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Confirmation Dialog</h4>
            </div>
            <div class="modal-body">
                <p>Are sure wants to delete?.</p>
                <input type="hidden" id="hdnGroupId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="btnDeleteRec">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
